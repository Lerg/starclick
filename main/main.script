local camera = require('libs.camera')
local flux = require('libs.flux')
local hashed = require('libs.hashed')
local input = require('libs.input')
package.loaded.vars = {}

require('levels.1')
require('levels.2')
require('levels.3')
require('levels.4')
require('levels.5')
require('levels.6')
require('levels.7')
require('levels.8')
require('levels.9')
require('levels.10')

math.randomseed(os.time())

function generate_level(w, h)
	local width = w
	local height = h
	local lines = ''
	for y = 1, height do
		local line = ''
		for x = 1, width do
			local ground = math.random(1, 3)
			local distance = math.sqrt(math.pow(math.abs(x - w/2), 2) + math.pow(math.abs(y - h/2), 2)) / (w / 2)
			if math.random() < math.pow(distance, 4) then
				ground = 0
			end
			if #line > 0 then
				line = line .. ', '
			end
			line = line .. ground
		end
		if #lines > 0 then
			lines = lines .. ',\n'
		end
		lines = lines .. line
	end
	print(lines)
end

function init(self)
	-- Set blue background.
	msg.post('@render:', 'clear_color', {color = vmath.vector4(0.3, 0.3, 0.3, 0)})
	msg.post('.', 'acquire_input_focus')
	msg.post('menu', 'enable')
	msg.post('ui', 'disable')

	-- Initial camera settings.
	camera.alpha = math.pi / 6
	camera.beta = -math.pi / 6
	camera.distance = 120
	camera.view_width = 64
	camera.min_alpha, camera.max_alpha = math.pi / 4 - math.pi / 3, math.pi / 4 + math.pi / 3

	msg.post('/game#script', hashed.create_tiles)
	
	--sound.set_group_gain('master', 0)
	msg.post('/audio#music', 'play_sound')

	--generate_level(9, 9)
end

function update(self, dt)
	-- Render script needs dt
	camera.dt = dt
	flux.update(dt)
end

function on_input(self, action_id, action)
	if action.released then
		if action_id == hashed.key_f then
			defos.toggle_fullscreen()
		elseif action_id == hashed.key_l then
			msg.post('/game#script', 'restart')
		end
	end
	input.on_input(action_id, action)
end